{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,WAEpCH,EAAKC,KAAKO,iBAAiB,SAqG3B,SAAsBC,GACpB,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIN,OAAEA,IACvBG,EAAMI,cACJC,EAAYH,EAAMI,MAClBC,EAAWJ,EAAKG,MAChBE,EAAaX,EAAOS,MACR,KAAdD,GAAiC,KAAbE,GAAkC,KAAfC,IACzCC,aAAaC,QA3GS,gBA2GkBC,KAAKC,UAAUP,IACvDI,aAAaC,QA3GQ,eA2GkBC,KAAKC,UAAUL,IACtDE,aAAaC,QA3GU,iBA2GkBC,KAAKC,UAAUJ,I,IA9G5DjB,EAAKO,UAAUC,iBAAiB,SAqBhC,SAAcc,GAGZ,GAFAA,EAAIC,iBAG0C,OAA5CL,aAAaM,QAxBS,kBAyBqB,OAA3CN,aAAaM,QAxBQ,iBAyBwB,OAA7CN,aAAaM,QAxBU,kBAoCvB,YAVA1B,EAAA2B,OAAOC,QAAQ,wCAAyE,CACtDC,SAAtB,aACVC,QAAS,KACTC,SAAU,OACVC,SAAU,QACVC,aAAc,OACdC,QAAS,CACPC,UAAW,UAMjB,IAAIC,EAAYC,OAAOf,KAAKgB,MAAMlB,aAAaM,QAzCvB,mBA0CxBa,EAAUC,WACRC,EACAJ,OAAOf,KAAKgB,MAAMlB,aAAaM,QA5CT,mBA6CtBU,GAiDFlC,EAAKI,WAAWW,MAAQ,GACxBf,EAAKK,UAAUU,MAAQ,GACvBf,EAAKM,OAAOS,MAAQ,E,IA7FtB,IAAIsB,EAAU,KACVG,EAAQ,EA8CZ,SAASD,EAAML,GACTM,EAAQL,OAAOf,KAAKgB,MAAMlB,aAAaM,QAjDlB,qBAkDvBgB,GAAS,EA9Cb,SAAuBb,EAAUhB,GAC/B,MAAM8B,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEvBL,EACFI,EAAQ,CAAElB,SAAU,GAAGA,IAAYhB,MAAO,GAAGA,MAE7CmC,EAAO,CAAEnB,SAAU,GAAGA,IAAYhB,MAAO,GAAGA,KAAU,G,CAuCxDoC,CAAcP,EAAON,GAClBc,MAAK,EAACrB,SAAEA,EAAQhB,MAAEA,MACjBb,EAAA2B,OAAOwB,QAAQ,uBAAqBtB,QAAiBhB,OAAY,CAC7DgB,SAAQ,aACVC,QAAS,IACTC,SAAU,OACVC,SAAU,QACVC,aAAc,OACdC,QAAS,CACPC,UAAW,UAGfiB,QAAQC,IAAI,uBAAqBxB,QAAiBhB,OAAW,IAE9DyC,OAAM,EAACzB,SAAEA,EAAQhB,MAAEA,MAClBb,EAAA2B,OAAOO,QAAQ,sBAAoBL,QAAiBhB,OAAY,CAC5DgB,SAAQ,aACVC,QAAS,IACTC,SAAU,OACVC,SAAU,QACVC,aAAc,OACdC,QAAS,CACPC,UAAW,UAGfiB,QAAQC,IAAI,sBAAoBxB,QAAehB,OAAW,IAE9DuB,GAAaC,OAAOf,KAAKgB,MAAMlB,aAAaM,QA/EvB,kBAiFrBa,EAAUC,WAAWC,EAAOL,EAAWA,KAEvCmB,cAAchB,GACdnB,aAAaoC,WArFS,iBAsFtBpC,aAAaoC,WArFQ,gBAsFrBpC,aAAaoC,WArFU,kBAsFvBd,EAAQ,EACRN,EAAY,E,CAyBdhB,aAAaoC,WAlHW,iBAmHxBpC,aAAaoC,WAlHU,gBAmHvBpC,aAAaoC,WAlHY","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  FirstDelay: document.querySelector(\"input[name='delay']\"),\n  delayStep: document.querySelector(\"input[name='step']\"),\n  amount: document.querySelector(\"input[name='amount']\"),\n  btnSubmit: document.querySelector('button'),\n};\nrefs.form.addEventListener('input', getValueForm);\nrefs.btnSubmit.addEventListener('click', open);\nconst STORAGE_KEY_DELAY = 'promise-delay';\nconst STORAGE_KEY_STEP = 'promise-step';\nconst STORAGE_KEY_AMOUNT = 'promise-amount';\nlet startId = null;\nlet count = 0;\nreloadedPage();\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  //const DALAY = 1000;\n  return new Promise((resolve, reject) => {\n    //setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position: `${position}`, delay: `${delay}` }); // Fulfill\n    } else {\n      reject({ position: `${position}`, delay: `${delay}` }); // Reject\n    }\n    //}, DALAY);\n  });\n}\n\nfunction open(evt) {\n  evt.preventDefault();\n\n  if (\n    localStorage.getItem(STORAGE_KEY_DELAY) === null &&\n    localStorage.getItem(STORAGE_KEY_STEP) === null &&\n    localStorage.getItem(STORAGE_KEY_AMOUNT) === null\n  ) {\n    Notify.warning('Всі поля форми повинні бути заповнені', {\n      position: 'center-top',\n      timeout: 1250,\n      fontSize: '20px',\n      distance: '150px',\n      borderRadius: '25px',\n      failure: {\n        textColor: '#ааа',\n      },\n    });\n    return;\n  }\n\n  let delayTime = Number(JSON.parse(localStorage.getItem(STORAGE_KEY_DELAY)));\n  startId = setTimeout(\n    start,\n    Number(JSON.parse(localStorage.getItem(STORAGE_KEY_DELAY))),\n    delayTime\n  );\n  clearTextForm();\n}\n\nfunction start(delayTime) {\n  if (count < Number(JSON.parse(localStorage.getItem(STORAGE_KEY_AMOUNT)))) {\n    count += 1;\n    createPromise(count, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`, {\n          position: 'center-top',\n          timeout: 3000,\n          fontSize: '16px',\n          distance: '150px',\n          borderRadius: '15px',\n          failure: {\n            textColor: '#ааа',\n          },\n        });\n        console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`, {\n          position: 'center-top',\n          timeout: 3000,\n          fontSize: '16px',\n          distance: '150px',\n          borderRadius: '15px',\n          failure: {\n            textColor: '#ааа',\n          },\n        });\n        console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n    delayTime += Number(JSON.parse(localStorage.getItem(STORAGE_KEY_STEP)));\n\n    startId = setTimeout(start, delayTime, delayTime);\n  } else {\n    clearInterval(startId);\n    localStorage.removeItem(STORAGE_KEY_DELAY);\n    localStorage.removeItem(STORAGE_KEY_STEP);\n    localStorage.removeItem(STORAGE_KEY_AMOUNT);\n    count = 0;\n    delayTime = 0;\n  }\n}\n\nfunction clearTextForm() {\n  refs.FirstDelay.value = '';\n  refs.delayStep.value = '';\n  refs.amount.value = '';\n}\n\nfunction getValueForm(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  const delayForm = delay.value;\n  const stepForm = step.value;\n  const amountForm = amount.value;\n  if (delayForm !== '' && stepForm !== '' && amountForm !== '') {\n    localStorage.setItem(STORAGE_KEY_DELAY, JSON.stringify(delayForm));\n    localStorage.setItem(STORAGE_KEY_STEP, JSON.stringify(stepForm));\n    localStorage.setItem(STORAGE_KEY_AMOUNT, JSON.stringify(amountForm));\n  }\n}\n\nfunction reloadedPage() {\n  localStorage.removeItem(STORAGE_KEY_DELAY);\n  localStorage.removeItem(STORAGE_KEY_STEP);\n  localStorage.removeItem(STORAGE_KEY_AMOUNT);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","FirstDelay","delayStep","amount","btnSubmit","addEventListener","event","elements","delay","step","currentTarget","delayForm","value","stepForm","amountForm","localStorage","setItem","JSON","stringify","evt","preventDefault","getItem","Notify","warning","position","timeout","fontSize","distance","borderRadius","failure","textColor","delayTime","Number","parse","$47d4ff9957288465$var$startId","setTimeout","$47d4ff9957288465$var$start","$47d4ff9957288465$var$count","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","success","console","log","catch","clearInterval","removeItem"],"version":3,"file":"03-promises.d0d1297d.js.map"}